#!/usr/bin/env python3

# The MIT License (MIT)

# Copyright (c) 2018 Thomas Lov√©n

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

"""
Generate ui-lovelace.yaml from lovelace/main.yaml
"""

import sys
import os
import getopt
import yaml

indir = "lovelace"
helpstring = """
usage: lovelace-gen.py [-d sourcedir] [-i input] [-o output]
    Generates ui-lovelace.yaml from <sourcedir>/<input>.
    Other files in <sourcedir> directory can be included using !include filename.

options:
    -d sourcedir    Directory of input yaml files
                    Default: lovelace
    -i input        Filename of base yaml
                    Default: main.yaml
    -o output       Filename of output file
                    Default ui-lovelace.yaml
"""

def include_statement(loader, node):
    global indir
    filename = loader.construct_scalar(node)
    with open("{}/{}".format(indir, filename), 'r') as fp:
        retval = yaml.load(fp)
    return retval
yaml.add_constructor('!include', include_statement)


def main(argv):
    global indir
    outfile = "ui-lovelace.yaml"
    infile = "main.yaml"

    try:
        opts, args = getopt.getopt(argv[1:], "hd:i:o:")
    except getopt.GetoptError:
        print(helpstring)
        sys.exit(2)

    for opt, arg in opts:
        if opt == '-h':
            print(helpstring)
            sys.exit()
        elif opt == '-d':
            indir = arg
        elif opt == '-i':
            infile = arg
        elif opt == '-o':
            outfile = arg

    infile = "{}/{}".format(indir, infile)

    if not os.path.isdir(indir):
        print("Directory {} not found.".format(indir))
        print("Run {} -h for help.".format(argv[0]))
        sys.exit(2)
    if not os.path.exists(infile):
        print("File {} does not exist.".format(infile))
        print("Run {} -h for help.".format(argv[0]))
        sys.exit(2)


    try:
        with open(infile, 'r') as fp:
            data = yaml.load(fp)
    except Exception as e:
        print("Something went wrong.")
        print(e)
        print("Run {} -h for help.".format(argv[0]))
        sys.exit(2)

    try:
        with open(outfile, 'w') as fp:
            fp.write("""
# This file is automatically generated by lovelace-gen.py
# https://github.com/thomasloven/homeassistant-lovelace-gen
# Any changes made to it will be overwritten the next time the script is run.

""")
            fp.write(yaml.dump(data, allow_unicode=True))
    except:
        print("Could not write to output file.")
        print("Run {} -h for help.".format(argv[0]))
        sys.exit(2)


if __name__ == '__main__':
    main(sys.argv)
